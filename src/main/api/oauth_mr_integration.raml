#%RAML 0.8
---
title: Raml MrIntegration
documentation:
  - title: Testing oAuth 2.0
    content: | 
      This API just for testing oAuth 2.0 in MrIntegration
securitySchemes:
  - oauth_2_0:
      description: |
            Trying example
      type: OAuth 2.0
      describedBy:
        queryParameters:
          access_token:
            description: |
               Used to send a valid OAuth 2 access token. Do not use together with
               the "Authorization" header
            type: string
            required: true
        responses:
          401:
            description: |
                Bad or expired token. This can happen if the user 
                or expired an access token. To fix, you should re-
                authenticate the user.
          403:
            description: |
                Bad OAuth request (wrong consumer key, bad nonce, expired
                timestamp...). Unfortunately, re-authenticating the user won't help here.
          404:
            description: Unauthorized                    
      settings:
        authorizationUri: http://172.19.14.234:8084/tweetbook/api/authorize
        accessTokenUri: http://172.19.14.234:8084/tweetbook/api/token
        authorizationGrants: [ code ]
        scopes:
          - "READ"
          - "INSERT"
          - "UPDATE"
          - "DELETE"
        
  - oauth_2_0_github:
      description: |
        OAuth2 is a protocol that lets external apps request authorization to private
        details in a user's GitHub account without getting their password. This is
        preferred over Basic Authentication because tokens can be limited to specific
        types of data, and can be revoked by users at any time.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "access_token" query string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "Authorization" header
            type: string
        responses:
          404:
            description: Unauthorized
      settings:
        authorizationUri: https://github.com/login/oauth/authorize
        accessTokenUri: https://github.com/login/oauth/access_token
        authorizationGrants: [ code ]
        scopes:
          - "user"
          - "user:email"
          - "user:follow"
          - "public_repo"
          - "repo"
          - "repo:status"
          - "delete_repo"
          - "notifications"
          - "gist"

/request-token:
  get:
    responses:
      200:
        description: Success
        body:
          application/json:
            example: |
                {
                    "message": "Success"
                }
/ping:
  get:
    responses:
      200:
        description: Success
        body:
          application/json:
            example: |
                {
                    "message": "Success"
                }
    queryParameters:
      client_id:
        description: |
          The search terms. This can be any combination of the supported user
        type: string
      access_token:
        description: |
          The search terms. This can be any combination of the supported user
        type: string

/request-code:
  get:
    responses:
      200:
        description: Success
        body:
          application/json:
            example: |
                {
                    "message": "Success"
                }

                
/request-token-github:
  get:
    responses:
      200:
        description: Success
        body:
          application/json:
            example: |
                {
                    "message": "Success"
                }
/ping-github:
  get:
    securedBy: [ oauth_2_0_github ]
    responses:
      200:
        description: Success
        body:
          application/json:
            example: |
                {
                    "message": "Success"
                }
    queryParameters:
      access_token:
        description: |
           Used to send a valid OAuth 2 access token. Do not use together with
           the "Authorization" header
        type: string
        